<% provide(:title, "Skill Detail Pages") %>

  <!--スキルカテゴリーを回して、-->
  <!--スキル一覧（該当ユーザーの）も回す→カテゴリーIDが同じ時表示-->
  <!--1カテゴリ：1追加ボタン＆1ラベル（スキル名、スキルレベル）＆複数スキル-->
  <!--※複数スキル⇨スキル1：点数と更新、削除ボタン（それぞれ一つずつ）-->


<main>
<div class="user-skills">
<% @skill_categories.each do |skill_category| %>
  <div class="skill-category">
    <div class="category-content">
      <div class="category-title">
        <div class="category-name">
          <%= skill_category.skill_category %>
          <hr>
        </div>
        <%= button_to 'スキルを追加する'%>
      </div>
    
      <table>
        <thead>
          <tr>
            <th>スキル</th>
            <th>スキルレベル</th>
            <th></th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <% @user_skills.each do |skill| %>
            <% if skill_category.id === skill.skill_category_id %>
                <%= form_with(local: true) do |f| %>
              <tr id="skillId-<%= skill.id %>">
                <td class="skill name"><%=skill.skill_name%><%= f.hidden_field :id, value: skill.id %></td>
                <td class="skill level">
                  <!--,{},id:でidを指定-->
                  <%= f.select :skill_level, options_for_select((0..100).step(10).to_a, selected: skill.skill_level),{}, id: "skillLevelSelect_#{skill.id}" %>
                </td>
                <td class="skill update-btn">
                  <%= f.submit '習得レベルを保存する',params: { skill: { skill_level: skill.skill_level } }, data: { skill_id: skill.id }%>
                </td>
                <!--<!% end %>-->
                <td class="skill delete-btn">
                <%= f.submit 'スキルを削除する', data: { skill_id: skill.id } %>
                </td>
                <% end %>
              </tr>
            <% end %>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>
<% end %>
</div>
</main>

<div id="skill-modal" style="display: none;">
  <div id="skill-modal-content">
    <p id="modal-message"></p>
    <button id="close-modal">Close</button>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    var saveButtons = document.querySelectorAll(".update-btn");//edit
    var deleteButtons = document.querySelectorAll(".delete-btn");
    var modal = document.getElementById("skill-modal");
    var modalMessage = document.getElementById("modal-message");
    var closeModalButton = document.getElementById("close-modal");
    

  // update
    saveButtons.forEach(function(button) {
      button.addEventListener("click", function(e) {
        e.preventDefault();
        console.log("save!!!!")
        // skillId, skillLevelの取得
        // var skillId = button.dataset.skill_id
        var skillId = e.target.dataset.skillId //OK!!!!!!!
        var skillLevel = document.getElementById("skillLevelSelect_"+skillId).value//OK!!!
        var skillElem = document.getElementById("skillId-" + skillId)
        var skillName = skillElem.querySelector(".name").textContent
        console.log(skillName.textContent)
        console.log(skillId)
        console.log(skillLevel)
        
        updateSkillLevel(skillId, skillName, skillLevel);
      });
    });

  // delete
    deleteButtons.forEach(function(button) {
      button.addEventListener("click", function(e) {
        e.preventDefault();
        var skillId = e.target.dataset.skillId;
        // console.log("delete")
        // console.log("delete:" + skillId)
        deleteSkill(skillId);
      });
    });

    closeModalButton.addEventListener("click", function() {
      modal.style.display = "none";
    });

    function updateSkillLevel(skillId, skillName, skillLevel) {
      var request = new XMLHttpRequest();
      request.open("PUT", "/user_skill/" + skillId + "/edit", true);
      request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
      request.onload = function() {
        if (request.status === 200) {
          showModal(skillName + " の習得レベルを保存しました！");
        } else {
          showModal(skillName + " の習得レベルの保存に失敗しました。");
        }
      };
      request.send(JSON.stringify({ skill_level: skillLevel }));
    }

    function deleteSkill(skillId) {
      var request = new XMLHttpRequest();
      request.open("DELETE", "/user_skill/" + skillId + "/edit", true);
      request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
      request.onload = function() {
        if (request.status === 200) {
          showModal("Skill deleted successfully.");
          // Optionally, remove the deleted skill from the DOM
          var skillItem = document.getElementById("skillId-" + skillId);
          if (skillItem) {
            skillItem.parentNode.removeChild(skillItem);
          }
        } else {
          showModal("An error occurred while deleting the skill.");
        }
      };
      request.onerror = function() {
        showModal("An error occurred while deleting the skill.");
      };
      request.send();
    }

    function showModal(message) {
      modalMessage.textContent = message;
      modal.style.display = "block";
      console.log("showModal!!!!")
    }
  });
</script>